apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-products-deploy
spec:
  selector:
    matchLabels:
      project: micro-products-deploy
  template:
    metadata:
      labels:
        project: micro-products-deploy
    spec:
      initContainers:
        - name: init-db
          image: busybox
          command: [ 'sh', '-c', 'until nc -z micro-postgres-service 5432; do echo waiting for db; sleep 2; done;' ]
      containers:
        - name: micro-products
          image: bbiegajlo/micro-products:0.5.0 # change image if necessary
          env:
            - name: DATABASE_HOST
              value: micro-postgres-service  # name of your PostgreSQL service in other deploy.yaml
            - name: DATABASE_PORT
              value: "5432"  # Standard PostgreSQL port
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              value: "postgres"
            - name: DATABASE_NAME
              value: "micropostgres"
          # todo someday - passwords can be stored in secrets
          ports:
            - containerPort: 8080  # Adjust if app uses a different port
#          resources:
#            requests:
#              memory: "350Mi"
#              cpu: "300m"
#            limits:
#              memory: "512Mi"
#              cpu: "400m"
          resources:
            requests:
              memory: "512Mi"
              cpu: "400m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
#          resources:
#            requests:
#              memory: "1024Mi"
#              cpu: "800m"
#            limits:
#              memory: "2048Mi"
#              cpu: "1200m"
#          resources:
#            requests:
#              memory: "2048Mi"
#              cpu: "1200m"
#            limits:
#              memory: "4096Mi"
#              cpu: "1600m"
#          resources:
#            requests:
#              memory: "4096Mi"
#              cpu: "1600m"
#            limits:
#              memory: "8192Mi"
#              cpu: "2000m"
---

apiVersion: v1
kind: Service
metadata:
  name: micro-products-service
spec:
  type: ClusterIP
  selector:
    project: micro-products-deploy  # This should match the labels of your app's pods
  ports:
    - name: products-api
      port: 8080  # The port your app is listening on inside the cluster
      targetPort: 8080  # The target port on the pod
      protocol: TCP
      # nodePort: 31111  # The port exposed on each node. This must be in the range 30000-32767

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-orders-deploy
spec:
  selector:
    matchLabels:
      project: micro-orders-deploy
  template:
    metadata:
      labels:
        project: micro-orders-deploy
    spec:
      initContainers:
        - name: init-db
          image: busybox
          command: [ 'sh', '-c', 'until nc -z micro-postgres-service 5432; do echo waiting for db; sleep 2; done;' ]
      containers:
        - name: micro-orders
          image: bbiegajlo/micro-orders:0.4.0 # change image if necessary
          env:
            - name: DATABASE_HOST
              value: micro-postgres-service  # name of your PostgreSQL service in other deploy.yaml
            - name: DATABASE_PORT
              value: "5432"  # Standard PostgreSQL port
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              value: "postgres"
            - name: DATABASE_NAME
              value: "micropostgres"
          # todo someday - passwords can be stored in secrets
          ports:
            - containerPort: 8081  # Adjust if app uses a different port
#          resources:
#            requests:
#              memory: "350Mi"
#              cpu: "300m"
#            limits:
#              memory: "512Mi"
#              cpu: "400m"
          resources:
            requests:
              memory: "512Mi"
              cpu: "400m"
            limits:
              memory: "1024Mi"
              cpu: "500m"
#          resources:
#            requests:
#              memory: "1024Mi"
#              cpu: "800m"
#            limits:
#              memory: "2048Mi"
#              cpu: "1200m"
#          resources:
#            requests:
#              memory: "2048Mi"
#              cpu: "1200m"
#            limits:
#              memory: "4096Mi"
#              cpu: "1600m"
#          resources:
#            requests:
#              memory: "4096Mi"
#              cpu: "1600m"
#            limits:
#              memory: "8192Mi"
#              cpu: "2000m"

---

apiVersion: v1
kind: Service
metadata:
  name: micro-orders-service
spec:
  type: ClusterIP
  selector:
    project: micro-orders-deploy  # This should match the labels of your app's pods
  ports:
    - name: orders-api
      port: 8081  # The port your app is listening on inside the cluster
      targetPort: 8081  # The target port on the pod
      protocol: TCP
      # nodePort: 31112  # The port exposed on each node. This must be in the range 30000-32767

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: micro-ingress
spec:
  rules:
    - http:
        paths:
          - path: /products
            pathType: Prefix
            backend:
              service:
                name: micro-products-service
                port:
                  number: 8080
          - path: /orders
            pathType: Prefix
            backend:
              service:
                name: micro-orders-service
                port:
                  number: 8081

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: micro-products-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micro-products-deploy
  minReplicas: 1
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: micro-orders-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micro-orders-deploy
  minReplicas: 1
  maxReplicas: 15
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80